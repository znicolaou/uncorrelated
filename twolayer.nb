(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    285096,       5557]
NotebookOptionsPosition[    283105,       5517]
NotebookOutlinePosition[    283462,       5533]
CellTagsIndexPosition[    283419,       5530]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pblue", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0.65"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyellow", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0.65"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pred", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"173", "/", "255"}], ",", 
     RowBox[{"216", "/", "255"}], ",", 
     RowBox[{"230", "/", "255"}], ",", "0.65"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pgreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0.65"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thr", "=", 
   RowBox[{"Pi", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cf", "=", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"#", "<", 
          RowBox[{"-", "thr"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pblue", ",", "pgreen"}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "thr"}], ")"}], "/", 
            RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
         RowBox[{"#", "\[LessEqual]", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pgreen", ",", "pred"}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", "#", ")"}], "/", 
            RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
         RowBox[{"#", "\[LessEqual]", "thr"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"#", ">", "thr"}]}], "}"}]}], "}"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rasterizeBackground", "[", 
    RowBox[{"g_", ",", 
     RowBox[{"res_:", " ", "100"}]}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Rasterize", "[", 
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{"g", ",", 
             RowBox[{"ImagePadding", "\[Rule]", "0"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
             RowBox[{"FrameTicksStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
             RowBox[{"AxesStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
             RowBox[{"TicksStyle", "\[Rule]", 
              RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
             RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
           
           RowBox[{"ImageResolution", "\[Rule]", "res"}]}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
         RowBox[{"Scaled", "[", "1", "]"}]}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Options", "[", "g", "]"}]}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Options", "[", 
       RowBox[{"g", ",", "PlotRange"}], "]"}]}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Options", "[", 
       RowBox[{"g", ",", "Epilog"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phase", "[", 
    RowBox[{"args", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"args", "+", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"2", "Pi", " ", 
         RowBox[{"Accumulate", "@", 
          RowBox[{"-", 
           RowBox[{"IntegerPart", "@", 
            RowBox[{"Differences", "[", 
             RowBox[{"args", "/", "Pi"}], "]"}]}]}]}]}], ",", "0"}], 
       "]"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.77487916939494*^9, 3.7748811606623173`*^9, {3.785180300037857*^9, 
   3.785180302166815*^9}, {3.787143952585492*^9, 3.787143954531245*^9}, {
   3.7875340389286547`*^9, 3.787534058270063*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"06aa0b4d-daa2-48cd-b45d-3599c8eef6dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", "\"\<data/test3\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"strlst", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{"file", "<>", "\"\<.out\>\""}], ",", "String"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lst", "=", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"First", "[", "strlst", "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"2", "+", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", 
   RowBox[{"lst", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"lst", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nt", "=", 
   RowBox[{"tmax", "/", "dt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", 
  RowBox[{"file", "<>", "\"\<meanphase.dat\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"file", "<>", "\"\<frequencies.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"dat", "=", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"BinaryReadList", "[", 
       RowBox[{
        RowBox[{"file", "<>", "\"\<.dat\>\""}], ",", "\"\<Real64\>\""}], 
       "]"}], ",", "n"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"dat", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{"Length", "[", "dat", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.787532664711319*^9, 3.787532667333002*^9}, {
  3.787533225803412*^9, 3.78753333045378*^9}, {3.7875334004797077`*^9, 
  3.787533400789652*^9}, {3.787592203408214*^9, 3.787592207981339*^9}, {
  3.7875922788094873`*^9, 3.787592279884947*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7ae3eb02-6be3-483b-bc3e-2b53520e2bed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "500.`", ",", "0.01`", ",", "1.`", ",", "0.95`", ",", "5.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.787532668033944*^9, {3.7875332175570087`*^9, 3.7875332352600718`*^9}, 
   3.787533298892274*^9, 3.787533331957979*^9, 3.787533404227738*^9, 
   3.7875336925606213`*^9, {3.787534055512323*^9, 3.787534068836144*^9}, 
   3.787534732191799*^9, 3.7875347642754374`*^9, 3.787573418185638*^9, 
   3.787590121403335*^9, 3.787592209424567*^9, 3.7875922800962276`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"759c3f76-8f55-4869-b2a6-a6faf6b485b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "100", ",", "0.95`", ",", "5.`", ",", "1.`", ",", "1", ",", "0.627408`", 
    ",", "0.289492`", ",", "0.141242`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.787532668033944*^9, {3.7875332175570087`*^9, 3.7875332352600718`*^9}, 
   3.787533298892274*^9, 3.787533331957979*^9, 3.787533404227738*^9, 
   3.7875336925606213`*^9, {3.787534055512323*^9, 3.787534068836144*^9}, 
   3.787534732191799*^9, 3.7875347642754374`*^9, 3.787573418185638*^9, 
   3.787590121403335*^9, 3.787592209424567*^9, 3.787592280125609*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"09545bfa-b59a-4db1-91f5-d043877bfe19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Nmax", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"1", ";;", "2"}], ",", 
                RowBox[{"1", ";;", 
                 RowBox[{"-", "1"}], ";;", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}], 
                  "]"}]}]}], "]"}], "]"}]}], "]"}], "]"}], "/", 
          RowBox[{"(", "2", ")"}]}], "]"}], "^", "2"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"R", ",", "1"}], "]"}], "^", "2"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "16", "]"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Arg", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "2"}], ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "1"}], ";;", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}], 
                 "]"}]}]}], "]"}], "]"}]}], "]"}], "]"}], "/", 
         RowBox[{"(", "2", ")"}]}], "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[CapitalTheta]", ",", "1"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "16", "]"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"3", ";;", 
                 RowBox[{"-", "1"}]}], ",", 
                RowBox[{"1", ";;", 
                 RowBox[{"-", "1"}], ";;", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}], 
                  "]"}]}]}], "]"}], "]"}]}], "]"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "data", "]"}], "-", "2"}], ")"}]}], "]"}], 
        "^", "2"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"R", ",", "2"}], "]"}], "^", "2"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "16", "]"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Arg", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"3", ";;", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "1"}], ";;", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "1000"}], 
                 "]"}]}]}], "]"}], "]"}]}], "]"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "data", "]"}], "-", "2"}], ")"}]}], "]"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[CapitalTheta]", ",", "2"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "16", "]"}]}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"rasterizeBackground", "[", 
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Pi", "+", "#", "-", 
        RowBox[{"Arg", "[", 
         RowBox[{"Total", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"3", ";;", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "1"}], ";;", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"Nt", "/", "Nmax"}], "]"}]}]}], "]"}], "]"}]}], 
           "]"}], "]"}], "]"}]}], "&"}], "/@", 
      RowBox[{"Reverse", "[", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"3", ";;", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "1"}], ";;", 
             RowBox[{"Ceiling", "[", 
              RowBox[{"Nt", "/", "Nmax"}], "]"}]}]}], "]"}], "]"}], ",", 
         "Last"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"cf", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", 
           RowBox[{"2", "*", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "&"}], 
      ")"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"Nt", "/", "Nmax"}], "*", "i", "*", "dt"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "Nmax", ",", 
             RowBox[{"Nmax", "/", "5"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"data", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"data", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], "]"}]}], 
            "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"i", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "n", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "file"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "370"}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"75", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"75", ",", "55"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.751155486026648*^9, 3.7511554866208153`*^9}, {
   3.751159702813239*^9, 3.7511597030360737`*^9}, {3.751159812600706*^9, 
   3.7511598138774633`*^9}, {3.751498290877427*^9, 3.7514983204503517`*^9}, {
   3.751638934889579*^9, 3.751639010267558*^9}, {3.751639143845155*^9, 
   3.751639150324071*^9}, {3.7516391922787447`*^9, 3.7516392009717083`*^9}, 
   3.75163923452792*^9, {3.7516393334428463`*^9, 3.7516393471372128`*^9}, 
   3.751639408429941*^9, 3.7851808648224697`*^9, {3.7875327342690687`*^9, 
   3.787532761980795*^9}, {3.787533718855047*^9, 3.78753372190062*^9}, {
   3.7875341334541883`*^9, 3.787534166971527*^9}, {3.787534752968588*^9, 
   3.787534755533502*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"410ea2c7-191d-41cf-94f0-9bcd70975e0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
DheNQyqsKlsO/Y825iIq8Po/lS5xdD4uti+MnzjdjfKzHRdtd1/Hrw1j8ZoL
t2MdEQMekn9wufAzcVvyK53ZLxd6A7+VTV9C9pHFxY7FxkNKDzB75uJrxjRb
50Mk30IubtxfUqKZyPAcF+66oyyWpNL31VzofpKYyX8zf+dioNmDqj67iW7t
HN/MOTdSzPJfOBxG9dXI60+0Rji+n72+q6uExeNw1L80nnJWn/Y3DoeJ9+I3
0aMJ3yMcz2ap39TLI3xqF47JRi+WJx7hEf/huGF/YobgDumDG47hI5RjfIxZ
/gyHskDj7oLbtH5WOHxCH9b5PmX8h8Owabpb9Ts6T2E4fvdRlf9l9qsMx+69
hiveMfxaHY5tfKusjAvM3sIxzG/H42Qx1S+t4eg1bauX3J3VnxGI+Oix00Sf
8q9GBExm+r68WsXwQATM2nJftUUQvjOOwMoJb/fWPyJ7QARmvU1d5DCH/Msu
Aq47VE0jXtJ63hGQ/jj7K9TwHvEfgSj1l6c0xkQT/xEQyzp8plfdJP4j0JI6
uPefJvKv/Agk+qx6npnM+I/AoDGuD2c2MHwRgbaNXudvv7xI/EfAb+e+Zzbb
qH/UGAF7l5phxqkniP8IfD71SfDiDKu/IlEgvL30MLMXjUj8rind/8OI+OFE
Iqi3NGV7FNm3cSScS0ZrzxzC4mMkfDxNOJ77SF52kch1LFo+KYjZfySkJqbD
gt3J37mR0Lu1Umtg8mXiPxKpuSnvy3WpnsmKhMcYx5T1PMIH+ZHQ+bkuTPiT
+gGFkZijeL665HUs8R+JXvp1uX83XSP+I3H1+oRx/svLiP9ITOnYaBoQR/7X
GomNz/653Z7G4l8U4lRWzjkvJHlrRKHRo79h4BTC65wofJa8/xC5l+KHcRRu
XI7Ur6lIJP6joGXY7cHhi2S/dlFo2rb55KCejP8ovG26nrL6NtHcKGQ/wpT6
alZfReHKsO4VozOZ/UfBwWv0G6NuLJ5GQaJ+u7pGTPItjML2ld6qEbOZ/0ch
4cPKF6ViwrfVURB1mxsa85n4aYyCcor6coNMxn8UlvTQ6FrgwvqZ0Zgbr3Li
lILxH403rg4htwPoe040Cq5yfiZ4M/+PxpwLxu4xy1m/IBr7NHZePv15J/Ef
jV6FRwzmfa8h/qOhWtCtIIjFH240Dh4eb9P8X/6OhqfNM52e18g+sqJR/0Dd
y7qK8kF+NAZNT73rVUffF0ajekJRtUCdzqeMxs7SYIcpH5j/RyPwdJNPygPy
v8ZoDHjf+j53APVfWqNxYmn37estWX8rBpsGzv1+YjfZt0YMDNdsuPOb9R84
nXTMOrsC5h/Gnd/f6z+b/1+/JQarv+ucGZJC8rOLAb/SVbeC1cfeMVBoLnDL
PEH1GjcGZjFnCjldGH6NwY+n04v1JaXEfwzeeAx9nvqT4lN+DCJ075/cPo3k
URiDPUZFI13kDN/EQHz5ynclO291DEQfhUkTezP9x2DjwL+ZWZtJHq0xcC7i
WZi/YPgzFuv9Ti5qu0nxWSMWlx9qBBTrkXw4sfiQZZB5vIPyq3Es4vUner9t
ofyIWJxtUDu5aAThb7tYfFXbIxTkUbz1jsXB0L/xtlpriP9YOLZWmT0cy/qd
sdjaz1+rTzrFm6xYaLvv/3LnPYv/sZgbUlC2fzPTfyxssrda2pqyfkQsni61
WXbRkOjqWEyXWz6bbMDwVizsP2V4amuy/BeL5T3iV62oYfkvDgfWxYR2TaD5
GnGdiC+5sectim+cONRsvtDNU0TyNI7DMs00A+tIwh+IQ6WlzTbD3E3Efxz6
ugZaeT8ifO0dB4+8lgdaBTSfG4dPDUljQneyfm4cLOq7qiuHkP1lxaHR+sG/
lhU0Pz8Osyp/n/NxIHspjMPN+xcsTh8le1LGQTUlcWjlC/Kf6jicOmq+Ma8n
2UdjHIbWXHiYl0v6bY2Db9m2l9JKVv/FYy9cFU/cWP6LR2Ya/5yJ5STiPx4z
x52pbf5B+jaOh/O5eTaOWjeI/3js+9QRwn9G9mQXjzy3/uizhsW/eFgcD7l3
4Q3z/3g0FUV0FbF4yIuHxhz7T8ozTP/xmNQicJ86g+k/HkHu1RcO5DH9x0Mt
+leWfhjpTxkPA8+V0UdCmP3HQ91HVKlrTPJtjEd15P56kZLO1xoPV/GssnlK
dj+QgIvl/Xo4KOh7jQQs7H5g82cvlv8TUDClLsTFleKNcQK8719eHzWa1UcJ
GDHL7FzxNob/EjCj/efyF03kD94J+ML5FvM6ZArxn4CQBaEDvx0g/+IlQFR/
8Vz2Naq3sxIQWsJNnMnwdX4CUv39X0zOYvgvAT/jlqOZ9beUCej/WDnaKZPw
Q3UCLi99vtHeg8W/BMQZWDQO3MvsPwG3KnIUWUNY/ktE9H2DpoSDLP8nomiR
WseN6aweSETZ2JXvDlmy+JeIgm/ylQ6nWX2SCO83+t08VGncLhGVNZq5f1h8
907EHOenRW05ZL/cRARMWHh7e3/CJ7xEHJCFdXGdQv2RrER8i9b1sTQm+81P
xIm2Uxr3W5n+E+Gudc08zIz1AxPxU6y/OZv1y6sTYft2zaa+Rgz/JkJZCt8v
LH63JiI+6vv6fr7M/5MQrm3zahbLxxpJSAr+cdTRgtbjJKFY0XZOsofsxzgJ
E/KaM3aosvooCa+2Crfa/iD92SXhq1Syd0bfIuI/CQeeh+aMebCL+E/Coldt
0X/EhGd4SZhpGHRV1z6A+E+CXp/SFv62VOI/CZduXvvkt4LspTAJc+KyhJnW
dD5lEnRVNIcbazD7T0K69NG7GQsY/53fc4IvJB4j/lqTMHKOWteIOKb/ZJj8
SKl2S2X8J8O4p/6uF0dZPZaMCee9noV/InkbJwMDS6Kf61L8QTIqL54OEMmJ
tkvGVQOT8V5h64n/ZCQa9Dt20fY08Z+Miq//yqVehM94ybCeu6Eg25XwRFYy
Rm5MkPkso/ibn4zrv236aNQx/JuMswLs6vmR2X8yNo9+lyGwZvE/GUmZq1tG
/SF/bUzGvMR4/Q0aZM+tyZj4eLxe0H/1bwpUT+09u5r1NzRSELrr+A1/Zi+c
FFzLFxxf/IXZfwpkynSrKf/1y1MwOTf+ydUQymd2KbDh1s//2Zf1y1Jg9uFQ
S6Q5w/8pMNixMMk4jvl/Cgxjo7K7vWf4NwXfdxpYfZ1I9wv5KRAPKZ132oX8
rTAF485O+FXewvhPwVqHaaG5zUz/Kejm+67LzVjKB40pKG/o+TTvKdlLawpG
LRTmju/O+E9F/azcKZeOMfyTCtVz2gucJ0mJ/1R4fi1LHGpJ8dI4FTnpXqrO
jsz+U2Eum1ny2pj5fyqmCcvferF+r3cqXL+eKLjA4hU3Fek+H1X8nzD8m4qY
L2pbIwYw/JuK/RMHLe3F4kd+KrKtDl5ew+jCVBydZqZ3V5f111KhvNjgyU9m
+S8VRxwHHB03ldl/KhakX2jrGkv6aU3F5i/+/yrbqX+swsP9rvcqeXOp/6TG
Q9ToChttBdmPBq+zHraQv/9CtA4PukNi534MZfURD7P3SfduV7v6P9qQh4PO
+19vPkr30cY8bNn/NJU7lPo1M3hYJdm8tag32QN46GOxY/AqEcVvWx60Z4Y1
+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
4J2R4Rwn1v/kSTCyKDxlNbuvkkjgZNW4vnsjq/8kCN8Q33yQ1V85Egw9u955
7nuW/yXQ0js2MZT1Hws6z1cyxcGevR8olODS7qUr378iey+WwKrdRGxfxd6D
SmAadV3h2biC9C+BTaWZInoA1UfVEkTU9m5/5Ef5p04Cs81rLT1Mab1GCZ6f
mHu3dhDD/xJcv/dkzcBnrN8rwbWOxZyTrH/cLkF927PscA67/5SiMTNo6bN/
Gf6XIvzgBsun5SRPDSl0+gtcZMfJ/nSkeFs+5f28ndRv4EixOHHAd+lbqn8M
pZA0fZuqdZjwo7EU2icXnam8Q/Y8Q4r9ywwcOq6x+3MpZNa3hp67Que3lcLL
9E5zyifWT5NiYZra0K5RFI9dpNj2beLenpWsvyhF1rshQ8asI3kESaEXXPMz
8B3lP64UO3Umfr6qR/EtrpMfG80050XsfboUd/N/TNnI3idJpNj7sO5LxBvW
j5NieWqBj9CS7DFHiipxQ28ei+/5UmTfHpOyIYrmF0hhO9JoTVFPdl8hxYmL
kvZlV5j/S5GQ0bzH8b/3QVL8q3Zexe8foiulmHusWOf6ZbL3aikGqteXdhPQ
+4Y6KdqecMbssmH+L8Xtfac5S95S/GqW4l7A9fnysWTPrVJ8n1w1plsona9d
Co7obHf3dtb/kWHL0n3d3k1j+peh5Hyp9x0v5v8y7PHQW+SkSv6pI8ON0bMH
P2T5iCPDHMtQR7iz+C/D+PO1n6axesdYBsmhuYc7WD9hhgz25qXcHDmtBxlG
muzsPng15QtbGSySZv+KsWD4TwbXuV3ODprE8J8Mef76zS2j2HtAGfqGOWsa
DWPxX4bsxY9EbkFUr3NleCDdtzBGeYr0L0O0lvabO0uoPufJEHZhk75GL4qP
ks7xba9DZ7uy+zgZuom95Er2/iZHhtEfpwZ1P8feu8mQPPf3gmGVzP9laMiN
PPUkivyrsJM/8eqee1g/vViG84ePfV/13/tgGcrGffDcvJbFfxkqf5/7uege
8VctA//SBKHRDVqvToZrw4tqVs0j/TTKMO6J2skqK+qXN8vQ5DThSutt4qdV
huLGN8e/enBJ/zJ0jEix7HeR6jmVDNzsul0zL4nkp5aBjI+GDY82k/1oZKDX
PKfKxqm0v04GBLx+c6ay+MnJwFfe3xdX2P20YQaaEzJHTImn+cYZaAjwsjAa
z+r/DBx/5PA16RuL/xlYNm3EkmRWL9tmoP/hQeMcjlL8scvAroePHprOp98D
uHSO23NtlRUK0n8GjP2nrt+xkeqXoAwsLn9XY6bD6r8MpP3VGb62K60fl4Gl
b8t7rWX3F7zO8+gVeBjOZ/VfBoaf1uqvxt6XZmWgJVG9xw7mTzkZ8H08PcWm
hL3P6Fy/a+Xn8f4s/2fgUnvWZWt2v1uYgdqoa7u+MX0XZyDRIDXnfQzTfwbu
pZ4web6e6rfKDMyTf1CpXkvvuasz8MOuz2qVKaz/k4GavKbm/ikUPxszYLr5
4en77L1Wcwa0Fj0wP3+G+X8GrE+F6yqELP5nwOeU3hDjFOb/cmifvcv59JS+
V5OjWNvTSp+9/9eQY6/FdEX2I/peR46xsm7j17PfT3Dk2Ben21PHiOYbyrHA
z6/wm5TkYyxHq97BAQuVZN8z5Cjyc7m/aByr/+QoU4nca3aE6V+OfimjSrKr
2HsSOTZk8H38cyj/uMihSNzS9tuR4X85os6Ytj9meDRIjurFm2wuWTD8L0dv
a9c7cf9Q/yNOjjtuUacifNj7KzlsNuk2RAZQfSKRI/XB1U0VwyheZMnxyNqn
S20K078cQRdMf9T0YvhfjpgVzWbPWT+5QI4LwqVdSzYw/5djojCuKm840cWd
4/d/LbN9Tfwo5WgbErlzRxfCa5VyfG8p9Ch1pPfb1XLcXOcZN24/1Q91cph8
/3fAdl/2vkGO4aXV4f6sH9csh+tAVbUVw1j+l+Ns/I+8ou9M/3K8vzYu9haz
RxUFlvptXzmvC+v/K3BlU+Ff23ks/yuQfHd7VXM25RcdBfDpuFMPazoPR4Fx
Cw++0f2H+gmGCsRprrb6m8LeCyogDNwxiNPE/F+BLD9hobGM+b8CD5aK9p8z
oXhnq4DJB4PV+t9Y/adAet/GxA0jWfxXILbgWbPuYva+SIGUmT2WX1lN/aYg
BW43BNq4tdJ7TK4CKh2icc7JdJ8Q13lefoHEiEvf8xSo/rB57lBmzxIFnF/M
dDVoZf0fBUrrTb5vbGf4X4GajZ6W43sx/KdA/7nlY4tYv65AAZ0Dz192/e++
ToGdUpuggAnM/xU4e6n4SFY7e7+lQND8LT7rH1O9X6nAy9JkuyPjSF7VCmxS
C32rfpzwVJ0C33ZFl+T0ZO/pFbBftjDJ1J7sqVmBwD7BmnJ2n9mqwFh1+XWe
HsXLdgUmViVmJ12n34OpZGJO9I1Z38IIX6hl4rG+/9jDewjfaWTiUWoPU8PT
tJ9OJtKeppSY/fd7jUxkLqkVrk+h8xpmYtugYaoidj9onImM8hKffkweMzLh
p+m7r9qN1f+ZnecvNx10j9azzcQCjfXVc4bRenaZcKx6UabYQ/bk0vm949OV
W/6y96WZ8D07fkmfqQz/ZaJf6Cg/bhh9z83ERsmFnyO4hDfiMjF514fMpfXs
95iZuOI6wn3dddKHJBMx2Wq2WmsY/s9EatQlr9bdNJ6TiZmqNQ+yDrP3SZlw
0dsYIGT1bkEmxOqNC88b1Fj+HzP8Fbs=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubsuperscriptBox["R", "1", "2"], TraditionalForm], None}, {
         FormBox["t", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->300,
      LabelStyle->Directive[16],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 981.}, {0, 0.999999331447321}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      RotateLabel->False,
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
CsUgmBfAa8+n/qlMDKumvr4zLpXsr0IM1Tmhw4LDWT9LDDbCN+tapxKuRfrZ
oYfmxbD4LwYXg+yCpa8oPrSKoXXB6UCz/rRfhRhyPkVuePyK6R/5Jzefrf/J
4n88GLat2rrsjxLpPx5capd++fUv0TUR2+3Q9tlI56UbDzn3b4vqVImfGw+x
Udte2qrR902G8RAT0M+6zwfqv/DiYchHz+jQC5fI/3G+eq9D8t3UD4B4CDk5
oe1XJH2vZxkP83ntQ9VOUH1gGw+Zo1dyaq3I3+wRg5VF8DzKZ/mI/xR5zpxL
/Q2XeAgVdefMNKP6WhgP8cf69FmmpNxz/oHxoBoW+axlMHt/iQerOwW9Xway
/B/ph9+O0TQh/jTEnX6eVxYSzkD+uyfbR7LxJIjlF59t/ZdwDs7XLW4RfCYs
RXrS7qxzvWj8wnho3f7U8dJgVv/Fg41Pdl25JfN/xOnpX++GULypjoeqCVMn
r5tI+UFtPHh7mF67JWfvm/HQvjh79eIhlF+3Ir3ieZ+mvuy9Mx4a137b8/Q+
2VsX0vPqHznlsf5/ArR7rvl12IqwSgKYcNxr96uw99AE4Ok2rlbJpv3oJgDn
xYxt1/eSPXERb3L4EVlO9mKI2Hy7JHEq2QsvAWSS5QdXD1TqwaaI/4tbr3mW
7BMSQLRfL72rifgtEwCWOVzblsP8H+kugwvOHCJ5exx/SNT9YaPY98CIN4dN
WHGH6C6Ih5l16hTSeMIE4I913j+om76XC0wAQWKLYmsH6/8lQInyx7zbvem9
VIx4RPiQfRrUX0lD/oMre/P1qN+VkQD5K6r+s0ug+0OCOKU47xrLJ3ISQHdE
9OjYP6z+S4DaQTOSg+ez/g/iw63z6i4RliF/dML4SWvp/CtwPOnx08V1pK9q
xFezbHkPqR6oRX1Ui3V9V9F9KUd9NZnNavSi/KIV6XNNd58/RetT4Hl4ftt0
fibl5114nvV9x184yfp/icBZynk/woL6IyqJINruetB4KvmTJuL/wp1Uzaif
rov8Rh738o3IPrmIt7V1rPEl+zVEPHHcz6QGslceypdOGD18NcU3U6SvOSXz
Wszez5Ce//r12DFUT1giNt5gy7tE67VF/tKFMQul1G+wTwTd0nX9Byro/PiJ
UDsnuv5GAtmrSyJkOPptGXpUuQcLkf/Qm3DHrcQfmAj2ffTaDusSFiG9v8P3
owo6fzHS4/efizem+J2G41X+Y6I2kPwrA/nfF6ak2bL4nwhSvbY1qftIXzm4
nkI156+ziF+K8h1Dyw32EH8hju+qMv4760/KcLycpEGBeaz/i/IXT0zUfsr6
v7j/zcVTgpfS9121iO1yDzc0se+7EKu7PrD9QO+TrYhfdc3SvUffLyoQjx7e
3yqb3ke7EHdMnWuQy+r/JOhVZhLw8xX121SS4PefYKFPMOXjmknAOXL/YXgi
+Y8u8vsvEXLmU77NRXqf0v/WrKL83jAJ/ng3r8qNrKH4j/ySeWNd99D3ZaZI
H9DL67gq6RNQ/lHM1gvse21LxOk7NP+bQf0IW+RfPu6A6xKi2yN9+tCc4zso
vvMRZzx1LxhL30e4IObUiXMbaH9CxDXHup0ekL0FIl5iHRG0kfojIlzfrXNh
G37Q+YqTIMM34YG/gvKHtCSobfsw7aUnxaOMJLCf2eZtMZHitwTxMptZsJj4
c/7HnzvspSbxSxGfeKeb90WpBxcilm0xzujF6r8kkCqOCQf3o/qtAtdX4Pu6
zZzy2WrEB4Rnk7ZQPV+L2Ktdg8uj/oI8CUQ6xoJdVWS/rUkAoa+nO7eTfSmS
IH99cH0fNXb/J4FgyOJTgclUD3CSoTGjocjEiPJTlWQQnDp/5OQU8mfNZGjX
uuLw93pary7yO8Tz+x8hfm4y5Ezf0Oq5iOY3TIaqh2q1EzeRP/CSweZRltqx
MFq/KdKnZDVfaaH4BMlgOE6klrid/M0Ssc/ofpNc2XtyMtievR1avpnGs8fx
Ho8xuH+K6g1+MriUlHwBHvmzC64nbNNmnVGEhSj/9bXu7f50XoG4v+8xX2Tn
Kb6JkqFU6eu6H9uoXylGPGBEl9iYfY+I+30VtOLoKYpfGSi/8LvxHDWKbxKk
t3S0pE+m8XIQm+7nHDxI/FIcz3jlTNkf6m8WIpYqPdfnkf3JkiG6bfSKk0PJ
viuSoa5M42Lq0WOk/2T4xgtwzWu4RfpPhvlua77kvad+lzwZOtP6fvKfRt/L
tyZDiO3ygUaV9H28IhkCgpvaoseTf3Yhfvv82fN4et/ipMBt4+Avp6az/D8F
VP+L6eteyvL/FLAa9n5c82yyb12k7xu00/E0+3+ZFGh9nmVyp5byG8MUiL8X
tXSmGqv/cfz6yyd2VZE/mCKelvfnZirr/6SA4bXJh5K/k71a4nj7izmVMRQP
bZGuMeBhmxJhe6TPrV41u4Z9X4l0z8lm410Iu6SAS7mScPxL9t6aAjmJ6w2/
zSV7CkR5l8I7/R6z91ekXxh6RKUP2YsY8SbZALNOGi8N+Z8YXRe8Yvk/Yv/c
64//Yd+n4X5nb58ZyOqhHJw/8Mfz8+tVZP8H7ibPcw==
          "]]}}, {}, {}, {}, {}},
      
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["\[CapitalTheta]", "1"], TraditionalForm], None}, {
         FormBox["t", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->300,
      LabelStyle->Directive[16],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 981.}, {-3.1334508393416804`, 3.1391936090763513`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      RotateLabel->False,
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.751150090335483*^9, 3.751150114565372*^9}, 
   3.751150624917881*^9, 3.751150792905645*^9, 3.751150902325677*^9, 
   3.75115476994769*^9, {3.751154922142023*^9, 3.751154938461047*^9}, 
   3.7511554870174217`*^9, {3.7511597034019003`*^9, 3.7511597299460773`*^9}, 
   3.75115977435491*^9, 3.7511598153848057`*^9, 3.751161191400303*^9, 
   3.751161751900093*^9, {3.75116206020782*^9, 3.751162088624762*^9}, 
   3.751198634282167*^9, 3.751203556460034*^9, 3.751203875482606*^9, {
   3.75120394003156*^9, 3.751203960864551*^9}, {3.7512042956183662`*^9, 
   3.751204316029674*^9}, 3.751224865409171*^9, 3.751304152801137*^9, 
   3.7514981710533333`*^9, {3.751498327569004*^9, 3.751498341711694*^9}, 
   3.7516301510284643`*^9, 3.751638868072063*^9, 3.751638980313456*^9, 
   3.7516390137289658`*^9, 3.751639150689837*^9, 3.751639201195365*^9, 
   3.75163923530392*^9, 3.751639296754224*^9, 3.751639348253125*^9, 
   3.7516394185549383`*^9, {3.75164853342481*^9, 3.751648560544587*^9}, 
   3.7516676131758127`*^9, 3.784904964969941*^9, 3.78516457088907*^9, 
   3.7851739196340837`*^9, 3.785174383838635*^9, 3.7851744925432167`*^9, 
   3.7851802431549664`*^9, 3.7851803105785017`*^9, 3.785180690799665*^9, 
   3.785180865842202*^9, 3.785180969700326*^9, 3.78524292014132*^9, 
   3.785244257735573*^9, 3.7869883368236637`*^9, 3.786988736069189*^9, 
   3.787061622900009*^9, 3.787532691567541*^9, 3.787532818909422*^9, 
   3.787533742180663*^9, 3.7875341758270683`*^9, {3.787534735556141*^9, 
   3.787534764978778*^9}, 3.78757342380377*^9, 3.78759014209801*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f957edfc-fd23-44a2-b053-a6ab82a5a102"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
WJbtNkmF+l0DARrG3Znn+uIg6U+AcfxujREcmj+YCXCwymuk7yDqZ8wF2BHO
X31tDfmLrQATh/26NLSa4o8rQL3Zzh5DTYpnDwFMJ5QcHOZI8vMEWNruZew3
g/TLFyAvSHHq8Fo2PxRg1L1+W68UU7yLBOi3q9i0s5H0lSFAn+P3nubtJXtn
C5Bfu8B+6H80T5cK4HS18lXLAPLXPAEC81L+lZYTnhUKoH340/zT20j+UgEs
Hp7VmBBM/bdMgPelbft57+m8cgFW/bjx+KA35a9KAb6MVI5evYDWawUYMmu2
fHM8u88QYPA3TozmL6o3mgUwu7Hq8eoPVK+0CaC+w0ByzZjum7sFaMkbnTO/
h+X/OJQ7LQx030r6UIzDnfnBl8NtWDzE4fWuavURsXS+ehzkpnt+TLtN/s2J
A9c/MoXD6n+dOKzpqn79+Q+bl8TBXFGzU38L5QeD3u9xdv66KGbz1Th8fu2y
aFkX4ZtZHHQlftv23KT+3DwOZ+/6ZKxn7z9s47Br7LdpR4aw/ioOCIjOwDGS
zyMOW1+PO+ynxPAmDrHlKTbP/ake5Mch9z+tHSUTWfzFofNT7h4VnQ9k/zi0
2glvmA5l9VgctGx/fz8ie0f2j8NtsyVHqr1JX9I4BDw91q/oOukzLw6WG2+4
DZBS/i6Mwxyx8ZYp3eQvpXFomLp7gZBP97+yODxLlPe97kr5rjwOjSscnm9V
JX+rjMOLQFG+xiKKx9o47PxvR8d/auT/9XGYf1Xr25NXpO/mOJy+cDHzdi7l
v7Y4NAcNKGhdTfjaHYeW7VZfLSvY/D0etU2cQSFmLP7jMcD1nPovVt+oxWPb
LGXLpGmEX+rxSH0v/y27mvTHiUcT7+m3I5n0PZ14zDPZvyiJR+frxuPdrnMa
ShUs/uNRKt3Q3alI8Y743v/utb9QJXuaxUOUVnVA7i/Fj3k8HIctnVviT3hi
G49LWyR3flmxeXQ8yromOJacJn17xEM7rdXxpx/hMS8e7e5WJbu/kr/x4zGl
Qecfm6fsfjke6+7bLLecRvoUxcPw3ZIuh1b6XkY8bi/dMqb6BtVn2fHYsdzb
qtaU7k+kvfya2or6faV5R148+k0vUUo8t5fsH4/KDUeGK12nfqE0Hhocoaq6
A7sf6v1e7S+3jINUD5bHQ4W3X87h3zSyfzyavdLLNIaTvmrjsXv/pC84KyX7
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
62YivIrf/WPAVvIncxGUDWacfmTC4l+EldWHn/axYe+hRLA07XCfKSC89xCh
MOaXtpeUfs8TwW6p9s7TceQvfBFkF9Rvu91l75dE6Gw/UHhZl2iRCE2n3VdU
d7L3CCIMGes2Gptpf7YIiUv5U7IM2XxeBIdPG58VXmP2FyEisN+8b1nM/iKc
1TI3KWph+V+EuevXDVv6mfxJJsKzOVPu8O2pHygXIUuuZXllNOFlpQjlOjka
VUf2kP1FiFY43Lcrl/rjehE2TNa/dhMUX80i9LVKNc8LI/209drL3mr0ElYf
d4vQeKHttc9Ddv+Tgker9Yu9QfwppuCmh7z+u+VsHp6CnsncZfvraV09BVEn
G9dILrL3gikoG3Do8MwWmo/ppKDr/vJnKhbEn24KDB2OnnLZTvd5BimYtbrj
33VbKF8iBXo5YzZL75H/maVA5uhWn32G4ss8BTnrDgY72hK/tinw6OAtE3HZ
/WLv90PHqSp+JrzxSEHonCUHPCtZ/KegVlNl5KNc8n9+Cjo69ngUz2Tv7VPw
Jd9i+lBPym+iFEz3XdTT4kXyZqTg694quW458sfsFIg/hR+66cfuZ1Ow/Pou
jeXfyN/zUvD3c/dCy2ek/8IUzM2e0+L0nfRZmoJt3nkj9Aaz+j8F1ycG5jht
ofqyPAWT3MMcK86z+i8FBRMX/zSRUX1fm4LNq7I+XbtG8VmfAvWbP8wfb6D6
qzkFUyKuBL2cyvr/FMypc/Z/zmH9XwoaOw1fljxk79/EyHl6YLv7O/IPRTHs
PfJdDj0gedXEcGmaZ7/am+ytLkYfOZN35y1Jfo4YPiOPLpCfTfLpiDFH/rHT
hYHsvkiMNxVjv352IvsZiKF/4ErunWIW/2LYDd1qWpPC+j8xGr9Ni7TWYfEv
xo2uGFluPdnTVowxF8fUNnNZ/yeGcd7Vrv/Pj4cYu0/aC1w0qP7iiRHADYxW
m0l4zhejK3e3otkehv9iqJyJshSMovpY1Pt7G5NrdV9Z/y/GoKDstq4RDP/F
eMatLqlrZ+9zxBhaYanzejTl+zwxNvapV5AMZPEvxqxt/bySwPBfjJ3n9fpr
sn+/IhODJ0vYf47pp1yM71dPP5x5g/V/Yig3cob0vU90ba+8M7Um9TUnvKvv
1U/Rg909AsKPZjFENqF6CWeof24T4+Hfqc/OOpF/dIuxPXjZwEeL2PvTVPSZ
e4zbI6H7bMVUrG78qWhZS/WYWirOBdcb79xM+KKeitPz9hxaeZu9V0uFZXm+
0/VgikedVIwblntD2ZLk1U3Fxv0m437PJ38wSIXRyg03H06i/gepWO5t7B41
hX5vlgqPuzyJK+vPzFOxaYlcu+Imyn+2qbB74m1UnEzv+7mpuLzvhvFtC8pn
Hqko5I0y37SH5se8VPh0PQ+ZKiN78lPR43pt3fNXxL8gFavWFdTEpJN+Rako
ClwV5hv/nuyfCrXM73plF0jf2amoNXXel3aU5JX2yvfTv/8uHfKPvFQojz58
fCXLZ4WpGOS1stBgBvlHaSqUBjVcOCKgeJGlwntC6aC3W1j/l4oJks8KqCA8
quyVN84/RjOG6rPaVGzYu7Hj2h7C2/pU+OWtc/VLp/quuZcf+64fi7tY/d/L
746vvyXHyL+6U5Htc6ljwCR2/5cG/xz+DsNyohXT4HnAqHXoPuJfLQ0abl6m
zefJfuppUB4WqHWpmc3/0pCx6HL+20/Ev04aVEO14kZEE62bhp7a93csXrL5
bxqG2JnxV31n76vTMGZthGxyItnDLA1n7i5tXL+S3aem4cu4IduM2Htg2zRw
5lu8U+EQfnHTcKNnoYuTFfmTRxoevTi/ymMVfY+Xhq8hYyzLrxIe8NNQJzun
9Veb+h9BGhY0PN907T75uygNlUPMn1fNov4uIw1icdho+YE0r81OQ5n97Fs/
31D9JU1DyOJJj5R2sv4/DSY1TvJ3tpH8hWnYYFScvd2I9F+ahgv8Q2arn7L3
0Wngy4cK98wi/ylPw9KGmzkvL7D5bxp+NnmqhrVQ/V2bhmL7YS3vVlG81qfB
+nX/PqH3aN7ZnAarHel73+qx905peLemcEFXP5b/e+Xf9Kq6YjKzvwSaqx79
HM3mH4oS3GtUsMgsYfeBEtT/fu27L5f0qS6BHr9lysJAhv8SFFRp8WPeEL7q
SCDoUZfVzqH405VAte53a8lwqk8NJAgZkF1Qz95/QIID+vKm6rOJXzMJ3It2
NRbtJP2ZS2CsmPS8KpL8wVYCHWuHxBNezP4S1G15Pr9IQr/36KUH+LlFFbL3
JhKMO7pbeHIU4R9fglL9HwHjEkh/AglGfg06ElVH+CCSwELw3/zcWeQvGRJw
arJK7Nn7mGwJIq5qgdfN8F+CEknxgf2zGf5LEDdOvztWheG/BPYf1jqMZO+3
SiUwVbJK+nyHvQ/u3b8gUvSdw+wvwbPCJrGmPOv/JVhfzU9MMqL5Sa0Enhuj
FYbvZu9bJBjgt6dmYBvV580S2E7VNv6TzOa/EvxeOlnr2CXa3y1B91ytDS3/
0nxPLh2/blz2iL+/neyfjteaK4bMKWP9XzqsR4eXNrpQPKin4/aJxkOKyZRf
OOn4zVObPruG9f/pWOmkPFH3GXsvkI5TD0wG6bSy/J+OtQvPZz3gsfeT6Tg4
OqzoZAH5m1k68t2Hvqhj78/N0+HwWa8paRbp2zYdi0btb49aQ/Jx0xHU0rTb
8hrpwyMdei8Tp919T/UDLx37Vp1t7lPJ5r/peFy/N8FFwP59XDre8p8mjHxE
vxelo771W9DULvYeMR3zn64+M6GG7Jmdjv41V94ND2H4n46lt41n1jVTfsrr
5ZePTd8OPlj2f4f6yEQ=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubsuperscriptBox["R", "2", "2"], TraditionalForm], None}, {
         FormBox["t", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->300,
      LabelStyle->Directive[16],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 981.}, {0, 0.6923897706650436}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      RotateLabel->False,
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.0055000000000000005`], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
+/G++dlX5bw+Rbqib34dNnMUmfdtZX3P66FX9bKn5NckIkC5WT9GhbQ8EVFv
6v49yyfdkojR4f28FR8Sb7YnovHDMNdPFqS7EvE66YljYAJz/5WE1aP2br6/
i7RSEnpTWD9N15NWSYL3g3OHRsgoXi0JD2T84Euu5LOTsPeUxaQD3xT+aJ0k
2K29WKzpQnxpkIT+A/2aC5n6lnES5swd3rHkGnN/lgTBqVLDE1cY/ktCseOO
+GQHhv+SsKT6wvvWqdS/QxIkvNyzaTFMfS0JI18k3F4kIe2VBIW8IrWeLqbe
loQRMbnnuxaTz0tCMtvW9QdzH8dPgnjDtIZHW0iLkpAv0l4smk7tM5IQUdAz
cdF08rOT0D7o7n4DU+a+Owmvqg4s+NZO9a78JIyrG/LPvijmvq7v+RwZ6mFs
QfxamoSbbz1yDh9k7seTMMS7OC5TTnxakQTr6JgwxSTiUVkS1DwP+/3kkV+T
BOVZasNOmhPfypPQfGX8y4OfqR7XkoSlIUoNd7dQ/+19z/fGUv3B9hTflYQZ
YQ2/D2ZS/YyVjO69osNe/chXSkadRfTozTbkqyTDjfv3hFV3aD5qyeh9c2zu
rmSmPpaMLO9JU5z1iV91krF2x+go3QlUnzJIhkuD/edJE+j9S+NkNPmO6Rnf
S/UkJEN9udUIo2p6n9IyGYLGM0ER9XQfbZMMMx3DaaGTqR7mkIyAC6JW/Xa6
f+MkQzOP5/RBRrzrlYw9zVGX7ceRz01G8vBGrUt7yOcl44XThPG+SS+I/5Px
o/zED9cA4mNRMroqFDbuqKLxM5Lxm9/g7z3+AvF/X/+PQv1iO4h/c5Lxccsz
sw27iI/zk5F/7dDjmq+5tP7JMN01cwY/7jytfzIuGyBtiZUnrX8ySivMzgxI
oPcTK5JROOKkQ+1IEa1/MmZ0fe4fMozeT6xJhvKV+s/m5vR+oTwZ481/ty6y
fEL8l4z3W6/5p2vQ+4TtydDoNUl+z7pK/Ne3Pv0b9qruqSf+E+F6eePI4cOf
Ef+JoKyhU99T3kz8J8KprLajFeNpf1YTIXWG0y8jHeJltgi7bC5bTz1M9S4d
EdqrNIZemE48aCDCqC11XfNukG8sgnFA489xYvIhwqH8BRWHT5BvKUKbR8RT
t2LybUS49L1X1htHfOggQo3hVpMlIJ8jwoUbdyqPzCffSwSDs8aXtd6Q5oqw
+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
          
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          SubscriptBox["\[CapitalTheta]", "2"], TraditionalForm], None}, {
         FormBox["t", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->300,
      LabelStyle->Directive[16],
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 981.}, {-3.1216902383929566`, 3.1096532131596604`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      RotateLabel->False,
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.751150090335483*^9, 3.751150114565372*^9}, 
   3.751150624917881*^9, 3.751150792905645*^9, 3.751150902325677*^9, 
   3.75115476994769*^9, {3.751154922142023*^9, 3.751154938461047*^9}, 
   3.7511554870174217`*^9, {3.7511597034019003`*^9, 3.7511597299460773`*^9}, 
   3.75115977435491*^9, 3.7511598153848057`*^9, 3.751161191400303*^9, 
   3.751161751900093*^9, {3.75116206020782*^9, 3.751162088624762*^9}, 
   3.751198634282167*^9, 3.751203556460034*^9, 3.751203875482606*^9, {
   3.75120394003156*^9, 3.751203960864551*^9}, {3.7512042956183662`*^9, 
   3.751204316029674*^9}, 3.751224865409171*^9, 3.751304152801137*^9, 
   3.7514981710533333`*^9, {3.751498327569004*^9, 3.751498341711694*^9}, 
   3.7516301510284643`*^9, 3.751638868072063*^9, 3.751638980313456*^9, 
   3.7516390137289658`*^9, 3.751639150689837*^9, 3.751639201195365*^9, 
   3.75163923530392*^9, 3.751639296754224*^9, 3.751639348253125*^9, 
   3.7516394185549383`*^9, {3.75164853342481*^9, 3.751648560544587*^9}, 
   3.7516676131758127`*^9, 3.784904964969941*^9, 3.78516457088907*^9, 
   3.7851739196340837`*^9, 3.785174383838635*^9, 3.7851744925432167`*^9, 
   3.7851802431549664`*^9, 3.7851803105785017`*^9, 3.785180690799665*^9, 
   3.785180865842202*^9, 3.785180969700326*^9, 3.78524292014132*^9, 
   3.785244257735573*^9, 3.7869883368236637`*^9, 3.786988736069189*^9, 
   3.787061622900009*^9, 3.787532691567541*^9, 3.787532818909422*^9, 
   3.787533742180663*^9, 3.7875341758270683`*^9, {3.787534735556141*^9, 
   3.787534764978778*^9}, 3.78757342380377*^9, 3.78759014223949*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"384a03d3-2b94-43f3-a11f-e1623baccfa2"],

Cell[BoxData[
 GraphicsBox[InsetBox[
   FormBox[
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
E/5E+jkqYtutxGaX1NtgK6OvscwVpstywFnYjSYsz3LFmf9Ibu6C1p2v9MG9
LrJ7h5rdiDPIB5YiuUU6yyiMVaa1WFc486NoPdaLNsTMbqAVU0Yz2sqIRPCE
8Ajb5+6gT9k1z8pPzxF/Iz8iXyJ7AX40YNMEd5HbnsIU5bovV5DLvkzFLED7
BDIFbKplWUD+nGmpv61wnzQ9ov5WgsK+OjWzQAH/8/MK5wzgkSS6A7x28Cp6
GFwMQjhxz+R92oOp2ntxRfOFJO357zqapr33/V/rqMkDLjPaGyILEOTibyic
hY/QZuV/1JBx8Mv7tOe/8Uqy5ZyLSF7Ug6bniEaNyYY/M9BlJm0tjimc+S14
AHngJ2ck58LovcCZbNkpl51PPGYEHYQ2qYbk0ggXH1y6n42JMV0d38W5FK8d
eWWBRLlNYV+l27lUGL8qln3IrY+h46twqrZTNlj5muoAjNc9jV6OB3yv3adM
0HZ6AZuDGyULTEaIpFBZHVMEH8bFCqxoPp9sPZlSdP6epr33IinQwlTkYyP+
ru6yTYtvSyv0tdXOvFOKzLyTmbknFKH/PX/xLKaoeRynuanhZqLpclLRejrV
cTyt6P1JG9hvKCI7k8nNEUV6Q5ux+pnLqnJz5WOXFQ+tZfcId62ldwi3rSU3
Fc6eNuwFFb+iGYK3NZT+AqPEMXPl4Hr7zb48RXDWkt8aoDJb4AKCZjf+HeP5
BG/dmQ6yqK+fBdIPWuCExTb/TAh0FmQBFvllAWa0x79atCzA5ET4EZvtvvD2
zTf8s0Ah/xMKFKwpqL8POmyHOoyhNpfOqnTdvYQiNy/sIs4O1CZSHh9+colt
73fmNSsy85oycxsUiaP9tK4oJ757XeTFOn2qdlCm7X6iNV1KKjqPpfu/0RWx
D0xjte2yyjBXai4rktayKCFiLQ0Thq0lQwpnQUdmTp0iO6ca747/RUvNK3is
OJvrOHrJ7M4C1NhIkL7nUGj3gsDzw8nj73GUYPWx1w+5+X91FuDfnIHVJphH
z38C9V7EyzwecrqEbxboG9ApVE9MML7PLVYWmO7BWvFDAzrtceqq0OgFRMef
6b7vNMXQ54nYBxGX94dj2wcV+rfdWOJrBq/DoN9oPHuq/j6dNlOFbundv2iK
oS8GkptaFOaBsO+OPY0OjDEsJEagD1x6UNKqTg2OPj3Fqs5drH9eL2nmq5i4
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
       "], {{0, 
       514}, {514, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> 100, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{514, 514},
     PlotRange->{{0, 514}, {0, 514}}],
    TraditionalForm], Scaled[{0, 0}], Scaled[{0, 0}], Scaled[1]],
  AspectRatio->1,
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Epilog->{},
  Frame->True,
  FrameLabel->{{
     FormBox["t", TraditionalForm], None}, {
     FormBox["i", TraditionalForm], 
     FormBox["\"data/test3\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[2]],
  FrameTicks->{{{{0, 
       FormBox["0", TraditionalForm]}, {100, 
       FormBox["100", TraditionalForm]}, {200, 
       FormBox["200", TraditionalForm]}, {300, 
       FormBox["300", TraditionalForm]}, {400, 
       FormBox["400", TraditionalForm]}, {500, 
       FormBox["500", TraditionalForm]}}, {{0, 
       FormBox["\"\"", TraditionalForm]}, {10000, 
       FormBox["\"\"", TraditionalForm]}, {20000, 
       FormBox["\"\"", TraditionalForm]}, {30000, 
       FormBox["\"\"", TraditionalForm]}, {40000, 
       FormBox["\"\"", TraditionalForm]}, {50000, 
       FormBox["\"\"", TraditionalForm]}}}, {{{0, 
       FormBox["0", TraditionalForm]}, {20, 
       FormBox["20", TraditionalForm]}, {40, 
       FormBox["40", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}, {80, 
       FormBox["80", TraditionalForm]}, {100, 
       FormBox["100", TraditionalForm]}}, {{0, 
       FormBox["\"\"", TraditionalForm]}, {20, 
       FormBox["\"\"", TraditionalForm]}, {40, 
       FormBox["\"\"", TraditionalForm]}, {60, 
       FormBox["\"\"", TraditionalForm]}, {80, 
       FormBox["\"\"", TraditionalForm]}, {100, 
       FormBox["\"\"", TraditionalForm]}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{75, 25}, {75, 55}},
  ImageSize->370,
  LabelStyle->Directive[24, 
    GrayLevel[0]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient", "GridLinesInFront" -> True},
  PlotRange->{{1., 100.}, {1., 501.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.751150090335483*^9, 3.751150114565372*^9}, 
   3.751150624917881*^9, 3.751150792905645*^9, 3.751150902325677*^9, 
   3.75115476994769*^9, {3.751154922142023*^9, 3.751154938461047*^9}, 
   3.7511554870174217`*^9, {3.7511597034019003`*^9, 3.7511597299460773`*^9}, 
   3.75115977435491*^9, 3.7511598153848057`*^9, 3.751161191400303*^9, 
   3.751161751900093*^9, {3.75116206020782*^9, 3.751162088624762*^9}, 
   3.751198634282167*^9, 3.751203556460034*^9, 3.751203875482606*^9, {
   3.75120394003156*^9, 3.751203960864551*^9}, {3.7512042956183662`*^9, 
   3.751204316029674*^9}, 3.751224865409171*^9, 3.751304152801137*^9, 
   3.7514981710533333`*^9, {3.751498327569004*^9, 3.751498341711694*^9}, 
   3.7516301510284643`*^9, 3.751638868072063*^9, 3.751638980313456*^9, 
   3.7516390137289658`*^9, 3.751639150689837*^9, 3.751639201195365*^9, 
   3.75163923530392*^9, 3.751639296754224*^9, 3.751639348253125*^9, 
   3.7516394185549383`*^9, {3.75164853342481*^9, 3.751648560544587*^9}, 
   3.7516676131758127`*^9, 3.784904964969941*^9, 3.78516457088907*^9, 
   3.7851739196340837`*^9, 3.785174383838635*^9, 3.7851744925432167`*^9, 
   3.7851802431549664`*^9, 3.7851803105785017`*^9, 3.785180690799665*^9, 
   3.785180865842202*^9, 3.785180969700326*^9, 3.78524292014132*^9, 
   3.785244257735573*^9, 3.7869883368236637`*^9, 3.786988736069189*^9, 
   3.787061622900009*^9, 3.787532691567541*^9, 3.787532818909422*^9, 
   3.787533742180663*^9, 3.7875341758270683`*^9, {3.787534735556141*^9, 
   3.787534764978778*^9}, 3.78757342380377*^9, 3.7875901468997087`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ed0d6c96-33c4-4971-a7fa-010600cb7e64"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"table", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"filebase", "=", 
       RowBox[{"\"\<data/tnoise/\>\"", "<>", 
        RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\</\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"table", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{"filebase", "<>", "\"\<uncorrelated\>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}], "<>", 
               "\"\<meanphase.dat\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "7"}], "}"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{"filebase", "<>", "\"\<correlated\>\"", "<>", 
               RowBox[{"ToString", "[", "i", "]"}], "<>", 
               "\"\<meanphase.dat\>\""}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "7"}], "}"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "0.01"}]}], "}"}]}], "&"}], "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Import", "[", 
                RowBox[{"filebase", "<>", "\"\<noiseless\>\"", "<>", 
                 RowBox[{"ToString", "[", "i", "]"}], "<>", 
                 "\"\<meanphase.dat\>\""}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "7"}], "}"}]}], "]"}], "]"}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}], "}"}]}], 
       "]"}], ";"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", "j"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.751639632357437*^9, 3.751639662937307*^9}, {
  3.7516397131615763`*^9, 3.751639733135557*^9}, {3.751639828922319*^9, 
  3.751639854594111*^9}, {3.7516399185298758`*^9, 3.751639938023055*^9}, {
  3.751640022873555*^9, 3.75164002410408*^9}, {3.774881240460305*^9, 
  3.7748812410642443`*^9}, {3.774881481415483*^9, 3.774881493114766*^9}, {
  3.7852426560197563`*^9, 3.7852426634942417`*^9}, {3.785242966064505*^9, 
  3.785242967063581*^9}, {3.7852430253635283`*^9, 3.785243025589588*^9}, {
  3.785243607565514*^9, 3.7852436224208107`*^9}, {3.785243687749511*^9, 
  3.7852436973065147`*^9}, {3.787319127449028*^9, 3.787319142869625*^9}, {
  3.787319290142687*^9, 3.78731929432628*^9}, {3.787319655724886*^9, 
  3.7873196586797533`*^9}, {3.787592223550919*^9, 3.7875922323289967`*^9}, {
  3.7875924106643057`*^9, 3.787592424749552*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"bc675c68-6de4-4398-8b20-b1b4856aafba"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"filebase", "=", 
   RowBox[{"\"\<data/noise/\>\"", "<>", 
    RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\</\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"strlst", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{
     RowBox[{"filebase", "<>", "\"\<correlated50.out\>\""}], ",", "String"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"lst", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"First", "[", "strlst", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"2", "+", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"lst", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "6", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"Internal`StringToDouble", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nt", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"Internal`StringToDouble", "[", 
      RowBox[{"lst", "[", 
       RowBox[{"[", "8", "]"}], "]"}], "]"}], "/", "dt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n0", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"Internal`StringToDouble", "[", 
      RowBox[{"lst", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "]"}], "/", "dt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{"Internal`StringToDouble", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "8", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t2", "=", 
   RowBox[{"Internal`StringToDouble", "[", 
    RowBox[{"lst", "[", 
     RowBox[{"[", "9", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<correlated50.dat\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"filebase", "<>", "\"\<correlated50frequencies.dat\>\""}], "]"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<uncorrelated50.dat\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"filebase", "<>", "\"\<uncorrelated50frequencies.dat\>\""}], 
     "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.785242811943465*^9, 3.785242816812976*^9}, 
   3.785242948394367*^9, {3.78524300440023*^9, 3.785243050162723*^9}, {
   3.7852450376397038`*^9, 3.785245037749131*^9}, {3.785245131982407*^9, 
   3.7852451320424023`*^9}, {3.7852452651771517`*^9, 3.785245265286188*^9}, {
   3.785245345770492*^9, 3.785245345879525*^9}, {3.7870634432926693`*^9, 
   3.7870634497787647`*^9}, {3.787147264914481*^9, 3.787147265647077*^9}, {
   3.787318601859398*^9, 3.7873186020162973`*^9}, 
   3.7875922480386*^9},ExpressionUUID->"1b93e6b9-f71c-4434-ba23-b8db92f579e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"./noiseslave\"\>", ",", "\<\"500\"\>", ",", "\<\"0.95\"\>", 
   ",", "\<\"5.00000000000000000000\"\>", ",", "\<\"0.0\"\>", 
   ",", "\<\"1.0\"\>", ",", "\<\"1\"\>", ",", "\<\"5e2\"\>", 
   ",", "\<\"1e2\"\>", ",", "\<\"1\"\>", ",", "\<\"1e-4\"\>", 
   ",", "\<\"17\"\>", ",", "\<\"rkf45\"\>", 
   ",", "\<\"data/noise/17/correlated50\"\>", ",", "\<\"1\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.785243027241404*^9, 3.785243050493923*^9}, 
   3.785245038138538*^9, 3.785245132421184*^9, 3.785245265673698*^9, 
   3.785245346312457*^9, 3.786991679199698*^9, 3.7870617655298567`*^9, {
   3.7870634444085693`*^9, 3.787063450095051*^9}, 3.787074727116033*^9, 
   3.7870747634013157`*^9, 3.787143806892309*^9, 3.787147266460272*^9, 
   3.787311829593503*^9, 3.787318433565096*^9, 3.787318602467108*^9, 
   3.78731918847682*^9, 3.787319316618149*^9, 3.787319701782571*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"5e5544c2-2c0d-4d7e-81db-43f0e2243cd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<correlated50.dat\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies1", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"filebase", "<>", "\"\<correlated50frequencies.dat\>\""}], "]"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"BinaryReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<uncorrelated50.dat\>\""}], ",", 
         "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frequencies2", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"filebase", "<>", "\"\<uncorrelated50frequencies.dat\>\""}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Mean", "[", "table", "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"K", "''"}], ",", 
      RowBox[{"OverBar", "[", 
       RowBox[{"R", "^", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "3"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Uncorrelated noise\>\"", ",", "\"\<Common noise\>\"", ",", 
        "\"\<No noise\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.787592297494363*^9, 3.7875923059633408`*^9}, {
  3.787592459065742*^9, 3.7875924652624826`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"84ab0d7f-110d-4392-b1cb-f1a8c26e1b02"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.007333333333333334], AbsoluteThickness[3], LineBox[CompressedData["
1:eJw10nswnGcUBvB1CVuk1lrs2sVewqQp0iRCjOh7oo1mpNphtEmKlISETiLR
Mtomma5p47IEkaq4jLTZxGWZSGKb0GiWEpdBXVZYy/JtK5bQcQmCqGnJ8cx8
884733l+559XcOJcYKQ+jUaL+P9bP/Pz1lNDxkIXxN+0/EBe31vJINtL67jv
MtmzESXh5RSU3q65jP8HyM2wJlZFbBKhbYQiBbqUi7mByTj/N4kfs2c+fplM
Tm1kjCh6OwskQSnYnyCp040VNu+lko729UyR9MR4HgmSoDdDulsDJ//1TcP5
WbJPHdswXZyG/gtytCWEE8RNx/48sb1FvTXqdwX3LRI35i8WZ0Iy0VsiH95y
K2gOz0JvmeRfd218npmF3iuyM+D3vXc/yUZvlZT/47RUPHENvTUyYpMrkz/J
QY8GMkZmY5syD+dpoExq6KnLzEdfDw4smAs5XxZiXx/SPHZnrtb/jPsM4Ky+
WduNc1L0DMFgelR5MrgYPUNwnptMVoWVobcFKh1Hvy/qkKFnBDM3K/kdR++i
Zww9jV5116zvo0cHDxqXIbgjR48OlOur+BKvh+i9Ac0MGu/CYjV6JtCk4X/2
troWPVNITJibuOeiQM8Mqt4/nXdwex16ZrDyIKzMlapHbys88m1LtP+iAb03
YV6q/bFmuRE9c4guq7XTypvQY8DxObL8KKEF5xmwdDZlNv9IK/oMuBdT67X7
0zbsWwAV1bxVUdCO+yzgIEOnNSzuQI8JVdvA3yW4Ez0mCNnGuRmeXegxYVrH
Gj0t6kbPEobHT77L7+pGzxJe93rQY4HiRRpz3kaJHgumWOVG4TFK9Figql4L
veHZi54VTC0eiyyW96JnBQHJVjHLh56iZw0DjrKHRg+eomcNOz/WSQJ9+tCz
hj315++EJ/WhZwO+l7K9zgj70bOBUFvFjF92P3ps8L6Yt93neT96bHA8liwt
j1Ohx4bfXK6a/kmp0OOA5lt/cxO/AfQ4ULZLMJYtG0DPFvbK9VRiuho9W+jz
NIqoTFCjZwuHjcQ7YobU6HFhhpPaRXcfRI8Lj9UBhdKMQfR4MK4wrgxVD6LH
g4o1eoPYcQg9HsgNOXpWGUPo2cFXztMy4/Yh9OwgWRK75sTSoGcPWZZO6aci
NejZw3UrSRwp0aBnD6mmII2b0KDnAJe8P68KcR9GzwECmMxo7nfD6PFhsVMp
PtAzjPN8+EmQER/LHUGfD1tuRz07HjaCfT40O19gqgpHcB8f2ooM3XXUCHoC
OKH2eHnEnEJPADq7kvFDrhR6AoiY5Pyx6zCFngCu9rHjfKIo9ARg0i897y2h
0BNCzq/+s9Wlm54QVmZzrRdaNz0hlHpIx8pHNz0hxFakDUbRtOgJQf0s2KGP
q0VPBEur7/h87aZFTwQ7SktXcj7SoifC969FTwTcDyqelIg3PRG4FdH/2l+4
6W2DWoP90dr7WvIfIsu0Ag==
        "]]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[3], LineBox[CompressedData["
1:eJw1z3kw3GcYB/BdIREhLHaxFrvrJhqlCDp5n0gESTSOHB3HH1lX6w8mqWhJ
lao7sh0rcYRxpsghRVTKJo6Sw71CHXu4ok1EpILQTZpMSx/fmd+8887v+X6e
eTm8aL8wBQqFEvrft3FeLdxIM4m0Vev06Eoh/9+7iUTXdcZ0Xyqx38wwSXF3
L/6sIRX/TxAnnUSJlkkaoWxmmkQLRUHVOWk4/5TMqW8vuaCeTsI38ydJsp6o
p2WkY3+eFNXem0tcTif9fRt5SRhRcs8j8RnoLZGcM/ToUMNMnH9NnnYwhAmn
MtFfIc6Nj2NbS7Owv0rsoyLL5MUXcd8aGRF+Q6LastH7m1g+XxM8/OISenLS
lPrsJ14IH713ZEpXISlkkI/eP2TR0tl8TcRH7wNZnX51Sxabgx4F2PF+Zg6N
OThPAVnhzrSv1HLRp8K4xYKT1vAV7CuAmEnL/uFoPu7bBm4X3rwWfZ2PniIU
nWVWqCTmoacIXmFZzsouV9FTgtnPde4OUUrQ2w5R6+dKWUpl6O2An916jt9I
qEBPGWyTlsoPHa1CTxkoDx4LnPOq0dsJd0zA2ybwJnoqsDDryGwPrENvFwxx
JfLvIhvRU4VrU627i+2b0FOF0yZmNTOBv6KnBlQ6n32FJ0RvN9T732KmNN9H
Tx28NFOsy3za0NMAWpVF/sO97TivAR1Um+AOx3b0NSD5evioH7RjnwY1JzIb
7l5uw300OLjxXJdW9DRh1xmHvDrH39DThGR/I89J5y70NKHYzmkq49UD9LRg
9rmVLDjiEXpacLnDd/kFqxs9bejpdKv9crIbPW2YK9Xr2hHbg542dMVXnipo
7UWPDtelh2z6a/vQo4My+5fM3Hf96DEg+MPBt4sLA+gxwHotX5abPogeAyR2
03tMewfR04GIpfWLE4JB9HRAy3zdVVtpAD1dcBMN3ciLEaGnC7dtPt1L1x9C
Txe8yjqqBipF6OmBfXUvj7cyhJ4eqC+GKLWpDaPHhOmIoH0agmH0mHCkYbfH
6flh9JjQIASv75VG0NOHtsMCdhB1BD19OJYd9tZ0dstjgUqz32Cyzwh6LGiR
H44ZbBlBjwVCz/I93yZseQawrY5Km+3Z8gxgoEZuJR//HT1DMAgIdZ06Poqe
IZxMKcq26hxFzxBWfSRpvhpj6BlBeKTmPc6lMfSM4IVoPs6JMY4eG3rL3ZtW
3o/jPBuq4x5Zuggm0GeD9L7U3IMqxj4b6umf2NTbiXEfGyYK3Z45xIrR4wDX
f7/iyUoxehx48kf/TMCiGD0O3PkrazrRWoIeB050zZsEBkvQ44C3sCC8ZUyC
HhdKCt7wLMyl6HHhgMfNgCe+UvS4oKXmt6R9TooeFzzO8l1cbkvR48KMRdx5
PlWGnjF09yl99KODDD1jGOXPss7HyNAzhpZj3slO12ToGUP0cmBMw4gMPWNg
fPzS1uz9lmcCqoL9tRVkkvwL8eOpgg==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[3], LineBox[CompressedData["
1:eJw11AtQlFUUB/CV9xLKCrvLc98IC8wgiCQUcI8lhag8hIqn8ogdRQqEFasB
TakUKh7txAABQopBrSGKhLHIYqa8XVhY2F02CcLC0qQcAZcslw7/mTvf3O87
53dmvrlzealZe9ONKBTKm8+W4VldZchVItffnKiL45P/932E8km9j6RpG/Fd
jZKU0XJ3jue9jN/VRO5JC3KXhBHKaqZJ/TZGs3d7JNbPklBt96XRczFEtJq7
RNgRG1V4MBb75wmlT/zbI1kCGRo05A8yORhvGarfj95DEru1ttaqJBXrF0j9
lS+HDr+dhv7fZOlYhkwsOYD9j8i0aCE15XQmzntMLoV//qdDUTZ6SyTxq/KK
fu1h9JZJ3kyOzGgkFz096bVoyjZpFqO3Qn7xYHa7S8XoPSWa+P0ubXP56FGg
uPs+1UZbgPUUIJz0G6b1J9BfB35BQmGI5ynsN4IAnlixybkY5xkDdSawRi4u
Rs8EOoc/WvEtPI2eCdi1izw3L5eiZwqDAymLrB8k6JlBTc+dzaJdFeiZA51r
KdrdU42eBRhZW3HzhQ3oWUCbf1qlbVsDelQoeL3K/UJ3I3qW8OrWE3ymjxS9
5+DT6pbPSnWt6FkBg9U3R85dRs8KWhTmA5OKK+ith5y9lYv+yg70NgC/vH3B
zaMTPWv4PqLEaEePDD0aSIoSTH0UXVhPg6D6zH7GT13o08DzZ2rXU5dr2L8R
VnJHyhaEXThvI9xzSUgKp655NhBQ1fEazbgHPRu40yBUuP11HT0biImS9WvO
30DPFqrNL/a2cG6iZwu7p1W6wPFb6NHh5Mytys6KXvToUHOtriXOqw89OuRX
CV+6l9ePHgNS9H32HNEAegyQB79wZO7yIHpM/H9D6DFhlm54MYweEyRR6fZH
C4fRs4NGmzrF7xHD6NnB6nE4s+bZQ2C3cPvxhtvo2cP9kDZW9FEFevaQ809n
cK7qNnoOUPp8SezHESPoOcChfFf9rwdH0XOEwEW2V8CDUfQc4fz2kcD3Q5To
OcKGXcbk6xQlek7gpIphfpikRM8JmpyED8ODleg5gyiU8eM3UiV6zsAsomYs
McfQc4Ydcl5Ms3rNY8GWN8zGzdzG0GOBh7+My/cbR48N7867+lhIx9FjQ6vt
vpPRHBV6bIicrs1/L1OFHgeuL4+1hs2r0OPAK8nSrOScCfS44PZMc46fxHou
GFOLOWkPJtHngv+eM6zsJDX2c2F942O+pkSN87jg526q2zeqRo8Hx2YoTwr+
VaPHA68jZROFOzXo8cD6+B5V0ykNejy4GC11/OCqBj0eNIclJM76atHjwxM3
w4WpRY8Ptaq3IvUXtOjxIauGfjdoWIseH85SorzTLKfQ40NQx4uHvkuaQk8A
mxJ7BR3lU+gJYAvbcMKm0BMAc8r6nWSKDj0BDJxgZ2i9degJIEf+rWtEnA49
FzjAW3d24Asd+Q8JUZrx
        "]]}}, {}, {}, {}, {}}, InsetBox[
     TemplateBox[{"\"Uncorrelated noise\"","\"Common noise\"","\"No noise\""},
      
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[24, 
           GrayLevel[0]], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"24", ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.2, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[
     Rational[1, 3], 0.3333333333333333],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       OverscriptBox[
        SuperscriptBox["R", "2"], "_"], TraditionalForm], None}, {
      FormBox[
       SuperscriptBox["K", "\[Prime]\[Prime]", MultilineFunction -> None], 
       TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 
     AbsoluteThickness[2]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->750,
   LabelStyle->Directive[24, 
     GrayLevel[0]],
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10.}, {0, 0.553086}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[3]], 
         Line[CompressedData["
1:eJw10nswnGcUBvB1CVuk1lrs2sVewqQp0iRCjOh7oo1mpNphtEmKlISETiLR
Mtomma5p47IEkaq4jLTZxGWZSGKb0GiWEpdBXVZYy/JtK5bQcQmCqGnJ8cx8
884733l+559XcOJcYKQ+jUaL+P9bP/Pz1lNDxkIXxN+0/EBe31vJINtL67jv
MtmzESXh5RSU3q65jP8HyM2wJlZFbBKhbYQiBbqUi7mByTj/N4kfs2c+fplM
Tm1kjCh6OwskQSnYnyCp040VNu+lko729UyR9MR4HgmSoDdDulsDJ//1TcP5
WbJPHdswXZyG/gtytCWEE8RNx/48sb1FvTXqdwX3LRI35i8WZ0Iy0VsiH95y
K2gOz0JvmeRfd218npmF3iuyM+D3vXc/yUZvlZT/47RUPHENvTUyYpMrkz/J
QY8GMkZmY5syD+dpoExq6KnLzEdfDw4smAs5XxZiXx/SPHZnrtb/jPsM4Ky+
WduNc1L0DMFgelR5MrgYPUNwnptMVoWVobcFKh1Hvy/qkKFnBDM3K/kdR++i
Zww9jV5116zvo0cHDxqXIbgjR48OlOur+BKvh+i9Ac0MGu/CYjV6JtCk4X/2
troWPVNITJibuOeiQM8Mqt4/nXdwex16ZrDyIKzMlapHbys88m1LtP+iAb03
YV6q/bFmuRE9c4guq7XTypvQY8DxObL8KKEF5xmwdDZlNv9IK/oMuBdT67X7
0zbsWwAV1bxVUdCO+yzgIEOnNSzuQI8JVdvA3yW4Ez0mCNnGuRmeXegxYVrH
Gj0t6kbPEobHT77L7+pGzxJe93rQY4HiRRpz3kaJHgumWOVG4TFK9Figql4L
veHZi54VTC0eiyyW96JnBQHJVjHLh56iZw0DjrKHRg+eomcNOz/WSQJ9+tCz
hj315++EJ/WhZwO+l7K9zgj70bOBUFvFjF92P3ps8L6Yt93neT96bHA8liwt
j1Ohx4bfXK6a/kmp0OOA5lt/cxO/AfQ4ULZLMJYtG0DPFvbK9VRiuho9W+jz
NIqoTFCjZwuHjcQ7YobU6HFhhpPaRXcfRI8Lj9UBhdKMQfR4MK4wrgxVD6LH
g4o1eoPYcQg9HsgNOXpWGUPo2cFXztMy4/Yh9OwgWRK75sTSoGcPWZZO6aci
NejZw3UrSRwp0aBnD6mmII2b0KDnAJe8P68KcR9GzwECmMxo7nfD6PFhsVMp
PtAzjPN8+EmQER/LHUGfD1tuRz07HjaCfT40O19gqgpHcB8f2ooM3XXUCHoC
OKH2eHnEnEJPADq7kvFDrhR6AoiY5Pyx6zCFngCu9rHjfKIo9ARg0i897y2h
0BNCzq/+s9Wlm54QVmZzrRdaNz0hlHpIx8pHNz0hxFakDUbRtOgJQf0s2KGP
q0VPBEur7/h87aZFTwQ7SktXcj7SoifC969FTwTcDyqelIg3PRG4FdH/2l+4
6W2DWoP90dr7WvIfIsu0Ag==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[3]], 
         Line[CompressedData["
1:eJw1z3kw3GcYB/BdIREhLHaxFrvrJhqlCDp5n0gESTSOHB3HH1lX6w8mqWhJ
lao7sh0rcYRxpsghRVTKJo6Sw71CHXu4ok1EpILQTZpMSx/fmd+8887v+X6e
eTm8aL8wBQqFEvrft3FeLdxIM4m0Vev06Eoh/9+7iUTXdcZ0Xyqx38wwSXF3
L/6sIRX/TxAnnUSJlkkaoWxmmkQLRUHVOWk4/5TMqW8vuaCeTsI38ydJsp6o
p2WkY3+eFNXem0tcTif9fRt5SRhRcs8j8RnoLZGcM/ToUMNMnH9NnnYwhAmn
MtFfIc6Nj2NbS7Owv0rsoyLL5MUXcd8aGRF+Q6LastH7m1g+XxM8/OISenLS
lPrsJ14IH713ZEpXISlkkI/eP2TR0tl8TcRH7wNZnX51Sxabgx4F2PF+Zg6N
OThPAVnhzrSv1HLRp8K4xYKT1vAV7CuAmEnL/uFoPu7bBm4X3rwWfZ2PniIU
nWVWqCTmoacIXmFZzsouV9FTgtnPde4OUUrQ2w5R6+dKWUpl6O2An916jt9I
qEBPGWyTlsoPHa1CTxkoDx4LnPOq0dsJd0zA2ybwJnoqsDDryGwPrENvFwxx
JfLvIhvRU4VrU627i+2b0FOF0yZmNTOBv6KnBlQ6n32FJ0RvN9T732KmNN9H
Tx28NFOsy3za0NMAWpVF/sO97TivAR1Um+AOx3b0NSD5evioH7RjnwY1JzIb
7l5uw300OLjxXJdW9DRh1xmHvDrH39DThGR/I89J5y70NKHYzmkq49UD9LRg
9rmVLDjiEXpacLnDd/kFqxs9bejpdKv9crIbPW2YK9Xr2hHbg542dMVXnipo
7UWPDtelh2z6a/vQo4My+5fM3Hf96DEg+MPBt4sLA+gxwHotX5abPogeAyR2
03tMewfR04GIpfWLE4JB9HRAy3zdVVtpAD1dcBMN3ciLEaGnC7dtPt1L1x9C
Txe8yjqqBipF6OmBfXUvj7cyhJ4eqC+GKLWpDaPHhOmIoH0agmH0mHCkYbfH
6flh9JjQIASv75VG0NOHtsMCdhB1BD19OJYd9tZ0dstjgUqz32Cyzwh6LGiR
H44ZbBlBjwVCz/I93yZseQawrY5Km+3Z8gxgoEZuJR//HT1DMAgIdZ06Poqe
IZxMKcq26hxFzxBWfSRpvhpj6BlBeKTmPc6lMfSM4IVoPs6JMY4eG3rL3ZtW
3o/jPBuq4x5Zuggm0GeD9L7U3IMqxj4b6umf2NTbiXEfGyYK3Z45xIrR4wDX
f7/iyUoxehx48kf/TMCiGD0O3PkrazrRWoIeB050zZsEBkvQ44C3sCC8ZUyC
HhdKCt7wLMyl6HHhgMfNgCe+UvS4oKXmt6R9TooeFzzO8l1cbkvR48KMRdx5
PlWGnjF09yl99KODDD1jGOXPss7HyNAzhpZj3slO12ToGUP0cmBMw4gMPWNg
fPzS1uz9lmcCqoL9tRVkkvwL8eOpgg==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[3]], 
         Line[CompressedData["
1:eJw11AtQlFUUB/CV9xLKCrvLc98IC8wgiCQUcI8lhag8hIqn8ogdRQqEFasB
TakUKh7txAABQopBrSGKhLHIYqa8XVhY2F02CcLC0qQcAZcslw7/mTvf3O87
53dmvrlzealZe9ONKBTKm8+W4VldZchVItffnKiL45P/932E8km9j6RpG/Fd
jZKU0XJ3jue9jN/VRO5JC3KXhBHKaqZJ/TZGs3d7JNbPklBt96XRczFEtJq7
RNgRG1V4MBb75wmlT/zbI1kCGRo05A8yORhvGarfj95DEru1ttaqJBXrF0j9
lS+HDr+dhv7fZOlYhkwsOYD9j8i0aCE15XQmzntMLoV//qdDUTZ6SyTxq/KK
fu1h9JZJ3kyOzGgkFz096bVoyjZpFqO3Qn7xYHa7S8XoPSWa+P0ubXP56FGg
uPs+1UZbgPUUIJz0G6b1J9BfB35BQmGI5ynsN4IAnlixybkY5xkDdSawRi4u
Rs8EOoc/WvEtPI2eCdi1izw3L5eiZwqDAymLrB8k6JlBTc+dzaJdFeiZA51r
KdrdU42eBRhZW3HzhQ3oWUCbf1qlbVsDelQoeL3K/UJ3I3qW8OrWE3ymjxS9
5+DT6pbPSnWt6FkBg9U3R85dRs8KWhTmA5OKK+ith5y9lYv+yg70NgC/vH3B
zaMTPWv4PqLEaEePDD0aSIoSTH0UXVhPg6D6zH7GT13o08DzZ2rXU5dr2L8R
VnJHyhaEXThvI9xzSUgKp655NhBQ1fEazbgHPRu40yBUuP11HT0biImS9WvO
30DPFqrNL/a2cG6iZwu7p1W6wPFb6NHh5Mytys6KXvToUHOtriXOqw89OuRX
CV+6l9ePHgNS9H32HNEAegyQB79wZO7yIHpM/H9D6DFhlm54MYweEyRR6fZH
C4fRs4NGmzrF7xHD6NnB6nE4s+bZQ2C3cPvxhtvo2cP9kDZW9FEFevaQ809n
cK7qNnoOUPp8SezHESPoOcChfFf9rwdH0XOEwEW2V8CDUfQc4fz2kcD3Q5To
OcKGXcbk6xQlek7gpIphfpikRM8JmpyED8ODleg5gyiU8eM3UiV6zsAsomYs
McfQc4Ydcl5Ms3rNY8GWN8zGzdzG0GOBh7+My/cbR48N7867+lhIx9FjQ6vt
vpPRHBV6bIicrs1/L1OFHgeuL4+1hs2r0OPAK8nSrOScCfS44PZMc46fxHou
GFOLOWkPJtHngv+eM6zsJDX2c2F942O+pkSN87jg526q2zeqRo8Hx2YoTwr+
VaPHA68jZROFOzXo8cD6+B5V0ykNejy4GC11/OCqBj0eNIclJM76atHjwxM3
w4WpRY8Ptaq3IvUXtOjxIauGfjdoWIseH85SorzTLKfQ40NQx4uHvkuaQk8A
mxJ7BR3lU+gJYAvbcMKm0BMAc8r6nWSKDj0BDJxgZ2i9degJIEf+rWtEnA49
FzjAW3d24Asd+Q8JUZrx
          "]]}}}, {}, {}, {}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 10.}, {0, 0.553086}}, PlotRangeClipping -> True, 
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      Rational[1, 3], Axes -> {False, False}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         OverBar[$CellContext`R^2], None}, {
         Derivative[2][K], None}}, FrameStyle -> Directive[
        GrayLevel[0], 
        AbsoluteThickness[2]], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> Directive[24, 
        GrayLevel[0]], 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 10.}, {0, 0.553086}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[3]], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[3]], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[3]]}, {
       "Uncorrelated noise", "Common noise", "No noise"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True}, LabelStyle -> 
       Directive[24, 
         GrayLevel[0]], LegendLayout -> "Column"]], {0.2, 0.6}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.78759229756101*^9, 3.787592306572262*^9}, {
   3.787592414766198*^9, 3.7875924293284197`*^9}, 3.787592466747423*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"ec66bba4-9753-4a57-b1d3-4c931c8b8847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"thr", "=", 
   RowBox[{"Pi", "/", "8"}]}], ";", 
  RowBox[{"cf", "=", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"#", "<", 
          RowBox[{"-", "thr"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pblue", ",", "pgreen"}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "thr"}], ")"}], "/", 
            RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
         RowBox[{"#", "\[LessEqual]", "0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pgreen", ",", "pred"}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", "#", ")"}], "/", 
            RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
         RowBox[{"#", "\[LessEqual]", "thr"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"White", ",", 
         RowBox[{"#", ">", "thr"}]}], "}"}]}], "}"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Mean", "[", "table", "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"K", "''"}], ",", 
        RowBox[{"OverBar", "[", 
         RowBox[{"R", "^", "2"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Uncorrelated noise\>\"", ",", "\"\<Common noise\>\"", ",", 
          "\"\<No noise\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"rasterizeBackground", "[", 
    RowBox[{"ListDensityPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Pi", "+", "#", "-", 
          RowBox[{"Arg", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"data1", "[", 
               RowBox[{"[", 
                RowBox[{"3", ";;", 
                 RowBox[{"-", "10"}]}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}],
          "&"}], "/@", 
        RowBox[{"Reverse", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"data1", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"3", ";;", 
               RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}], ",", 
           "Last"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"i", "*", "dt"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"data1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"data1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], "]"}]}],
               "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"data1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"data1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], "]"}]}],
               "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "None"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "3"}]}], ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cf", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", "*", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "390"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"95", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "55"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"rasterizeBackground", "[", 
    RowBox[{"ListDensityPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Pi", "+", "#", "-", 
          RowBox[{"Arg", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"data2", "[", 
               RowBox[{"[", 
                RowBox[{"3", ";;", 
                 RowBox[{"-", "10"}]}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}],
          "&"}], "/@", 
        RowBox[{"Reverse", "[", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"data2", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"3", ";;", 
               RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}], ",", 
           "Last"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"data2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"data2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], "]"}]}],
               "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"data2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"data2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], "]"}]}],
               "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "n", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"None", ",", "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "None"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"2", "/", "3"}]}], ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cf", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", "*", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "&"}], 
        ")"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "390"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "95"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "55"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotRangeClipping", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Grid", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "p1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"p2", ",", "p3", ",", 
          RowBox[{"MatrixPlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"cf", "[", 
               RowBox[{
                RowBox[{"-", "thr"}], "+", 
                RowBox[{"thr", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "/", "100"}]}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "100"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
            RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Pi]\>\"", ",", "\"\</\>\"", ",", 
                    RowBox[{"Pi", "/", "thr"}]}], "}"}], "]"}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"25", ",", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Pi]\>\"", ",", "\"\</\>\"", ",", 
                    RowBox[{
                    RowBox[{"Pi", "/", "thr"}], "/", "2"}]}], "}"}], "]"}], 
                    "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"50", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"75", ",", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<-\[Pi]\>\"", ",", "\"\</\>\"", ",", 
                    RowBox[{
                    RowBox[{"Pi", "/", "thr"}], "/", "2"}]}], "}"}], "]"}], 
                    "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"100", ",", 
                    RowBox[{"DisplayForm", "[", 
                    RowBox[{"RowBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<-\[Pi]\>\"", ",", "\"\</\>\"", ",", 
                    RowBox[{"Pi", "/", "thr"}]}], "}"}], "]"}], "]"}]}], 
                    "}"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"18", ",", "Black"}], "]"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "150"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\[Theta]", "-", "\[CapitalTheta]"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "100"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
        "}"}], "]"}], "}"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<large.pdf\>\"", ",", "p"}], "]"}]}], "Input",
 CellChangeTimes->{{3.787144021432207*^9, 3.78714405186239*^9}, {
   3.7871440843658237`*^9, 3.7871441215434*^9}, {3.787144152427343*^9, 
   3.787144152672042*^9}, 3.78714419051468*^9, 3.787145004353751*^9, {
   3.787145953017315*^9, 3.7871459650794773`*^9}, {3.787146035970275*^9, 
   3.7871460384877977`*^9}, {3.787146229704324*^9, 3.7871462378540707`*^9}, {
   3.787146448508531*^9, 3.7871464859207993`*^9}, 3.78731192026823*^9, {
   3.787318609592351*^9, 3.787318611289444*^9}, {3.787318652514062*^9, 
   3.787318656146056*^9}, {3.787318831585258*^9, 3.787318833902986*^9}, {
   3.787318947938052*^9, 3.787318961037952*^9}, {3.787319095633024*^9, 
   3.78731910373407*^9}, {3.7873197380196743`*^9, 3.787319738260188*^9}, 
   3.787319898425832*^9, 3.787320372434946*^9, {3.787320889909412*^9, 
   3.787320890082306*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"6039220a-6461-482a-8f68-4993929373ea"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.787144048704426*^9, 3.787144131928646*^9, 
  3.787144166400214*^9, 3.787144233716597*^9, 3.787145021943604*^9, 
  3.787145992080922*^9, 3.787146271299759*^9, 3.787146508506271*^9, 
  3.7871472109755793`*^9, 3.787311998570997*^9, 3.7873187624147367`*^9, 
  3.78731893239837*^9, 3.7873190545469723`*^9, 3.787319542218843*^9, 
  3.787319782790737*^9, 3.787320461519102*^9, 3.787320981347629*^9, 
  3.787592538148819*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"bbdc3044-0771-4906-956b-e9cc4a8fda5f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"filebase", "=", 
       RowBox[{"\"\<data/noise/\>\"", "<>", 
        RowBox[{"ToString", "[", "m", "]"}], "<>", "\"\</\>\""}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"strlst", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{
         RowBox[{"filebase", "<>", "\"\<correlated50.out\>\""}], ",", 
         "String"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lst", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"First", "[", "strlst", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"2", "+", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"lst", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"delta", "=", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dt", "=", 
       RowBox[{"Internal`StringToDouble", "[", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Nt", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Internal`StringToDouble", "[", 
          RowBox[{"lst", "[", 
           RowBox[{"[", "8", "]"}], "]"}], "]"}], "/", "dt"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n0", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Internal`StringToDouble", "[", 
          RowBox[{"lst", "[", 
           RowBox[{"[", "9", "]"}], "]"}], "]"}], "/", "dt"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t1", "=", 
       RowBox[{"Internal`StringToDouble", "[", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "8", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"t2", "=", 
       RowBox[{"Internal`StringToDouble", "[", 
        RowBox[{"lst", "[", 
         RowBox[{"[", "9", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"data1", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<correlated50.dat\>\""}], ",", 
             "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"frequencies1", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Import", "[", 
         RowBox[{"filebase", "<>", "\"\<correlated50frequencies.dat\>\""}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"data2", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"BinaryReadList", "[", 
            RowBox[{
             RowBox[{"filebase", "<>", "\"\<uncorrelated50.dat\>\""}], ",", 
             "\"\<Real64\>\""}], "]"}], ",", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"frequencies2", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Import", "[", 
         RowBox[{"filebase", "<>", "\"\<uncorrelated50frequencies.dat\>\""}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Mean", "[", "table", "]"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"K", "''"}], ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"R", "^", "2"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "3"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Noiseless\>\"", ",", "\"\<Uncorrelated\>\"", ",", 
              "\"\<Common\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"AbsoluteThickness", "[", "3", "]"}], "]"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"thr", "=", 
       RowBox[{"Pi", "/", "8"}]}], ";", 
      RowBox[{"cf", "=", 
       RowBox[{
        RowBox[{"Piecewise", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"#", "<", 
              RowBox[{"-", "thr"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pblue", ",", "pgreen"}], "}"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "+", "thr"}], ")"}], "/", 
                RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
             RowBox[{"#", "\[LessEqual]", "0"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pgreen", ",", "pred"}], "}"}], ",", 
               RowBox[{
                RowBox[{"(", "#", ")"}], "/", 
                RowBox[{"(", "thr", ")"}]}]}], "]"}], ",", 
             RowBox[{"#", "\[LessEqual]", "thr"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"#", ">", "thr"}]}], "}"}]}], "}"}], "]"}], "&"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Mean", "[", "table", "]"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"K", "''"}], ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"R", "^", "2"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "3"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Uncorrelated noise\>\"", ",", "\"\<Common noise\>\"", ",", 
              "\"\<No noise\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.6"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Pi", "+", "#", "-", 
              RowBox[{"Arg", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"Exp", "[", 
                 RowBox[{"I", "*", 
                  RowBox[{"data1", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ";;", 
                    RowBox[{"-", "10"}]}], "]"}], "]"}]}], "]"}], "]"}], 
               "]"}]}], "&"}], "/@", 
            RowBox[{"Reverse", "[", 
             RowBox[{"SortBy", "[", 
              RowBox[{
               RowBox[{"data1", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", ";;", 
                   RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}], ",", 
               "Last"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{"i", "*", "dt"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], 
                    "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"data1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], 
                    "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n", ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n", ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"2", "/", "3"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cf", "[", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", "*", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "&"}],
             ")"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "390"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"95", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"75", ",", "55"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRangeClipping", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"rasterizeBackground", "[", 
        RowBox[{"ListDensityPlot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Pi", "+", "#", "-", 
              RowBox[{"Arg", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"Exp", "[", 
                 RowBox[{"I", "*", 
                  RowBox[{"data2", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ";;", 
                    RowBox[{"-", "10"}]}], "]"}], "]"}]}], "]"}], "]"}], 
               "]"}]}], "&"}], "/@", 
            RowBox[{"Reverse", "[", 
             RowBox[{"SortBy", "[", 
              RowBox[{
               RowBox[{"data2", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"3", ";;", 
                   RowBox[{"-", "1"}]}], ",", "All"}], "]"}], "]"}], ",", 
               "Last"}], "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], 
                    "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"data2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "5"}], 
                    "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"i", ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n", ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", "n", ",", 
                   RowBox[{"Floor", "[", 
                    RowBox[{"n", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], 
              "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"None", ",", "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "None"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"2", "/", "3"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"cf", "[", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", "*", "Pi"}]}], "]"}], "-", "Pi"}], "]"}], "&"}],
             ")"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"24", ",", "Black"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "390"}], ",", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"15", ",", "95"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"75", ",", "55"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRangeClipping", "\[Rule]", "None"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "p1", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"p2", ",", "p3", ",", 
               RowBox[{"MatrixPlot", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"cf", "[", 
                    RowBox[{
                    RowBox[{"-", "thr"}], "+", 
                    RowBox[{"thr", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "/", "100"}]}]}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "100"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
                 RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
                 RowBox[{"FrameTicks", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "thr"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"25", ",", 
                    RowBox[{"thr", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"50", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"75", ",", 
                    RowBox[{
                    RowBox[{"-", "thr"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"100", ",", 
                    RowBox[{"-", "thr"}]}], "}"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"18", ",", "Black"}], "]"}]}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Black", ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
                 ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "200"}], "}"}]}], ",", 
                 RowBox[{"PlotLabel", "\[Rule]", 
                  RowBox[{"\[Theta]", "-", "\[CapitalTheta]"}]}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
              "}"}], "}"}], "]"}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"plots", ",", "p"}], "]"}], ";"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "11", ",", "20"}], "}"}]}], "]"}], ",", "m"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"\"\<large\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"m", "+", "10"}], "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"plots", "[", 
       RowBox[{"[", "m", "]"}], "]"}]}], "]"}], ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.785244577497188*^9, 3.785244600016852*^9}, {
   3.7852449870541286`*^9, 3.785244987786887*^9}, {3.785245026708756*^9, 
   3.7852450270503483`*^9}, 3.78524512159548*^9, {3.785245530037796*^9, 
   3.7852455834108877`*^9}, {3.785245973087297*^9, 3.7852459735727243`*^9}, {
   3.785246667122607*^9, 3.785246698742066*^9}, {3.7870627208195953`*^9, 
   3.787062742062447*^9}, {3.7870631963972473`*^9, 3.787063200421299*^9}, 
   3.78707481728019*^9, 3.7873119619058323`*^9, {3.787319908390798*^9, 
   3.7873199124245367`*^9}},ExpressionUUID->"0194deeb-5702-449d-8f0f-\
1b931da30f1e"]
},
Evaluator->"kernel2",
WindowSize->{984, 1016},
WindowMargins->{{112, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4892, 137, 462, "Input",ExpressionUUID->"06aa0b4d-daa2-48cd-b45d-3599c8eef6dc",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[5475, 161, 2228, 62, 262, "Input",ExpressionUUID->"7ae3eb02-6be3-483b-bc3e-2b53520e2bed"],
Cell[7706, 225, 599, 11, 35, "Output",ExpressionUUID->"759c3f76-8f55-4869-b2a6-a6faf6b485b4"],
Cell[8308, 238, 660, 12, 35, "Output",ExpressionUUID->"09545bfa-b59a-4db1-91f5-d043877bfe19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9005, 255, 11298, 289, 607, "Input",ExpressionUUID->"410ea2c7-191d-41cf-94f0-9bcd70975e0f"],
Cell[20306, 546, 32094, 559, 217, "Output",ExpressionUUID->"f957edfc-fd23-44a2-b053-a6ab82a5a102"],
Cell[52403, 1107, 32396, 564, 218, "Output",ExpressionUUID->"384a03d3-2b94-43f3-a11f-e1623baccfa2"],
Cell[84802, 1673, 116150, 1928, 417, "Output",ExpressionUUID->"ed0d6c96-33c4-4971-a7fa-010600cb7e64"]
}, Open  ]],
Cell[200967, 3604, 3595, 83, 193, "Input",ExpressionUUID->"bc675c68-6de4-4398-8b20-b1b4856aafba"],
Cell[CellGroupData[{
Cell[204587, 3691, 3740, 100, 331, "Input",ExpressionUUID->"1b93e6b9-f71c-4434-ba23-b8db92f579e6"],
Cell[208330, 3793, 1000, 17, 59, "Output",ExpressionUUID->"5e5544c2-2c0d-4d7e-81db-43f0e2243cd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209367, 3815, 3564, 95, 262, "Input",ExpressionUUID->"84ab0d7f-110d-4392-b1cb-f1a8c26e1b02"],
Cell[212934, 3912, 29280, 590, 312, "Output",ExpressionUUID->"ec66bba4-9753-4a57-b1d3-4c931c8b8847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242251, 4507, 17235, 439, 1067, "Input",ExpressionUUID->"6039220a-6461-482a-8f68-4993929373ea"],
Cell[259489, 4948, 553, 8, 35, "Output",ExpressionUUID->"bbdc3044-0771-4906-956b-e9cc4a8fda5f"]
}, Open  ]],
Cell[260057, 4959, 23044, 556, 1435, "Input",ExpressionUUID->"0194deeb-5702-449d-8f0f-1b931da30f1e"]
}
]
*)

